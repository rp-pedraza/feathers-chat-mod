version: 3

tasks:
  pnpm:
    internal: true
    preconditions:
      - sh: which pnpm >/dev/null
        msg: pnpm must be installed
      - sh: test -n ${PNPM_HOME}
        msg: PNPM_HOME environment variable must be set

  pnpm-i:
    internal: true
    sources:
      - package.json
      - ../package.json
      - ../pnpm-lock.yaml
      - ../pnpm-workspace.yaml
      - ../.npmrc
      - ../utils/lib/**/*.js
      - ../utils/lib/**/*.d.ts
    cmds:
      - pnpm i
    generates:
      - node_modules/@*/*/package.json
      - node_modules/*/package.json

  prepare:
    desc: Install node modules
    deps: [pnpm]
    cmds:
      - task utils:build
      - pnpm i

  data:
    desc: Make sure database file exists
    status:
      - test -f ../data/feathers-chat-mod.sqlite
    cmds:
      - task: data:migrate

  data:migrate:
    desc: Run database migration
    deps: [prepare]
    cmds:
      - pnpm run migrate

  data:migrate:up:
    desc: Run the next database migration step
    deps: [prepare]
    cmds:
      - pnpm run migrate:up

  data:migrate:down:
    desc: Undo last database migration step
    deps: [prepare]
    cmds:
      - pnpm run migrate:down

  build:
    desc: Build lib files
    deps: [prepare]
    cmds:
      - pnpm run compile
    sources:
      - package.json
      - tsconfig.json
      - src/**/*.ts
    generates:
      - lib/**/*.js
      - lib/**/*.d.ts

  serve:
    desc: Run the backend server
    deps: [prepare, data]
    cmds:
      - pnpm run dev

  serve:prod:
    desc: Run the backend server in production mode
    deps: [prepare, data, build]
    cmds:
      - task frontend:build
      - pnpm run start

  eslint:
    desc: "Runs eslint"
    cmds:
      - task utils:eslint
      - task utils:build
      - task: prepare
      - pnpm run eslint

  prettier:
    desc: "Runs prettier"
    cmds:
      - pnpm run prettier
