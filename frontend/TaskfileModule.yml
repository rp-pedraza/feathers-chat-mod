version: 3

tasks:
  pnpm:
    internal: true
    preconditions:
      - sh: which pnpm >/dev/null
        msg: pnpm must be installed
      - sh: test -n ${PNPM_HOME}
        msg: PNPM_HOME environment variable must be set

  pnpm-i:
    deps: [pnpm]
    run: once
    cmds:
      - pnpm i
    internal: true

  inject-backend-package:
    sources:
      - ../backend/lib/**/*.js
      - ../backend/lib/**/*.d.ts
    cmds:
      - task: pnpm-i
    generates:
      - node_modules/@rp-pedraza/feathers-chat-mod-backend/lib/**/*.js
      - node_modules/@rp-pedraza/feathers-chat-mod-backend/lib/**/*.d.ts
    internal: true

  inject-backend-package-if-needed:
    cmds:
      - task: inject-backend-package
    status:
      - sh -c "! grep -qe '^inject-workspace-packages *= *true' ../.npmrc >/dev/null 2>&1"
    internal: true

  install-node-modules:
    sources:
      - package.json
      - ../package.json
      - ../pnpm-lock.yaml
      - ../pnpm-workspace.yaml
      - ../.npmrc
    cmds:
      - task: pnpm-i
    generates:
      - node_modules/@*/*/package.json
      - node_modules/*/package.json
    internal: true

  prepare:
    desc: Build backend and install node modules
    cmds:
      - task backend:build
      - task utils:build
      - task: inject-backend-package-if-needed
      - task: install-node-modules

  build:
    desc: Build dist files
    deps: [prepare]
    sources:
      - package.json
      - tsconfig.*.json
      - vite.config.ts
      - src/**/*.ts
      - src/**/*.vue
      - ./index.html
    cmds:
      - pnpm run build
    generates:
      - dist/**/*.*

  serve:
    desc: Run frontend server
    deps: [prepare]
    cmds:
      - pnpm dev

  eslint:
    desc: "Runs eslint"
    cmds:
      - task utils:eslint
      - task backend:eslint
      - task: prepare
      - pnpm run eslint

  prettier:
    desc: "Runs prettier"
    cmds:
      - pnpm run prettier
